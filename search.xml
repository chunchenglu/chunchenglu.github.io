<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PS中的蒙版</title>
      <link href="/2021/07/09/Photoshop%E4%B8%AD%E5%9B%BE%E5%B1%82%E6%A6%82%E5%BF%B5%E7%9A%84%E7%90%86%E8%A7%A3/"/>
      <url>/2021/07/09/Photoshop%E4%B8%AD%E5%9B%BE%E5%B1%82%E6%A6%82%E5%BF%B5%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>事业常成于坚忍，毁于急躁。我在沙漠中曾亲眼看见，匆忙的旅人落在从容的后边；疾驰的骏马落在后头，缓步的骆驼继续向前。——萨迪<br>A career is often made in perseverance and destroyed in impatience. I have seen with my own eyes in the desert that the hurried traveler falls behind the subdued one; the galloping horse falls behind, the slow camel continues on. ——Sadie</p><hr><p><img src="https://hbimg.huabanimg.com/371863556c86f4ba03b14d1f4478e74768c6680dad4bc-unZdjM_fw658/format/webp" alt="艺术手绘"></p><h5 id="1-快速蒙版"><a href="#1-快速蒙版" class="headerlink" title="1.快速蒙版"></a>1.快速蒙版</h5><p>本质：通道 。所以可以运用通道所有可以用的工具，画笔、橡皮擦、选区，滤镜等等。运用快速蒙版出来后的临时通道，可进行通道编辑，在退        出快速蒙版模式时，原蒙版里原图像显现的部分便成为选区。<br>位置：快速蒙版在左侧工具栏里，或者按下快捷键Q。<br>释义：用快速蒙版出来后的临时通道，可进行通道编辑，在退出快速蒙版模式时，原蒙版里原图像显现的部分便成为街区。 使用方法：如果用框工具创建了一个矩形选区，可以进入快速蒙版模式并使用画笔扩展或收缩选区，或者也可以使用滤镜扭曲选区边缘。也可以使用选区工具，因为快速蒙版不是选区。从选中区域开始，使用快速蒙版模式在该区域中添加或减去创建蒙版。另外，也可以完全在快速蒙版模式中创建蒙版。<br>作用: 通过用黑白灰三类颜色画笔来做选区，白色画笔可以画出被选择区域，黑色画笔可画出不被选择区域，灰色画笔画出半透明选择区域。<br>快速蒙版可以创建和修改选区。在快速蒙版模式下，红色是非选区</p>]]></content>
      
      
      <categories>
          
          <category> photoshop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PS </tag>
            
            <tag> 图层蒙版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python日记2(random)</title>
      <link href="/2021/07/09/python%E6%97%A5%E8%AE%B02/"/>
      <url>/2021/07/09/python%E6%97%A5%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<p>事业常成于坚忍，毁于急躁。我在沙漠中曾亲眼看见，匆忙的旅人落在从容的后边；疾驰的骏马落在后头，缓步的骆驼继续向前。——萨迪<br>A career is often made in perseverance and destroyed in impatience. I have seen with my own eyes in the desert that the hurried traveler falls behind the subdued one; the galloping horse falls behind, the slow camel continues on. ——Sadie</p><hr><h5 id="1-random的应用"><a href="#1-random的应用" class="headerlink" title="1.random的应用"></a>1.random的应用</h5><p>下面是一个具体的实验小项目，目标是利用random.uniform模块结合round函数实现随机小数的生成，以及偏差的计算：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import random                                                                                                                                             </span><br><span class="line"></span><br><span class="line"><span class="comment">#随机数字生成器默认偏差控制在1-10%</span></span><br><span class="line">import random</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"-----欢迎使用随机数字生成器-----"</span>)</span><br><span class="line"></span><br><span class="line">bazhi=input(<span class="string">"请输入靶值："</span>)         <span class="comment">#预先设定一个目标值</span></span><br><span class="line">bazhi=<span class="built_in">float</span>(bazhi)                         <span class="comment">#目标值可能带有小数点所以转换成浮点类型</span></span><br><span class="line">range_=input(<span class="string">"请输入你想要偏差控制在百分之："</span>)       <span class="comment">#百分比表示成分数</span></span><br><span class="line">range_=int(range_)</span><br><span class="line">range_n=range_/100</span><br><span class="line">                                                             <span class="comment">#计算目标值（靶值）范围上下限</span></span><br><span class="line">up_=bazhi+bazhi*range_n</span><br><span class="line">up_=round(up_,1)</span><br><span class="line">down_=bazhi-bazhi*range_n</span><br><span class="line">down_=round(down_,1)</span><br><span class="line"></span><br><span class="line">n=input(<span class="string">"请输入想要的随机数个数:"</span>)     <span class="comment">#利用循环控制输出随机数的个数</span></span><br><span class="line">n=int(n)</span><br><span class="line">sum_=0.0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0,n):</span><br><span class="line">    </span><br><span class="line">    random_n=random.uniform(down_,up_)     <span class="comment">#使用random.uniform模块生成浮点类型随机数</span></span><br><span class="line">    random_n=round(random_n,1)                    <span class="comment">#利用round函数，保留小数点位数</span></span><br><span class="line">    time.sleep(1)</span><br><span class="line">    <span class="built_in">print</span>(f<span class="string">"第{i+1}个数据为:"</span>,random_n)</span><br><span class="line">    sum_=sum_+random_n</span><br><span class="line">average=sum_/n</span><br><span class="line">average=round(average,1)                                       <span class="comment">#计算偏差差</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"生成数据的均值为:"</span>,average)</span><br><span class="line">sd=(average/bazhi-1)*100      </span><br><span class="line">sd=str(round(sd,2))+<span class="string">"%"</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"数据均值与靶值的偏差为:"</span>,sd)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>输出的结果为：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-----欢迎使用随机数字生成器-----                                                                                                                                             </span><br><span class="line">请输入靶值：115</span><br><span class="line">请输入你想要偏差控制在百分之：5</span><br><span class="line">请输入想要的随机数个数:10</span><br><span class="line">第1个数据为: 110.0</span><br><span class="line">第2个数据为: 112.5</span><br><span class="line">第3个数据为: 111.1</span><br><span class="line">第4个数据为: 110.0</span><br><span class="line">第5个数据为: 110.3</span><br><span class="line">第6个数据为: 120.8</span><br><span class="line">第7个数据为: 113.7</span><br><span class="line">第8个数据为: 120.4</span><br><span class="line">第9个数据为: 111.7</span><br><span class="line">第10个数据为: 114.9</span><br><span class="line">生成数据的均值为: 113.5</span><br><span class="line">数据均值与靶值的偏差为: -1.3%</span><br><span class="line"></span><br><span class="line">进程已结束，退出代码为 0</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> random.randim </tag>
            
            <tag> random.uniform </tag>
            
            <tag> round </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python日记1（数据类型）</title>
      <link href="/2021/07/08/python%E6%97%A5%E8%AE%B01/"/>
      <url>/2021/07/08/python%E6%97%A5%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<p>事业常成于坚忍，毁于急躁。我在沙漠中曾亲眼看见，匆忙的旅人落在从容的后边；疾驰的骏马落在后头，缓步的骆驼继续向前。——萨迪<br>A career is often made in perseverance and destroyed in impatience. I have seen with my own eyes in the desert that the hurried traveler falls behind the subdued one; the galloping horse falls behind, the slow camel continues on. ——Sadie</p><hr><h3 id="python中常见的数据类型"><a href="#python中常见的数据类型" class="headerlink" title="python中常见的数据类型"></a>python中常见的数据类型</h3><p>Python 中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。在 Python 中，变量就是变量，它没有类型，我们所说的”类型”是变量所指的内存中对象的类型。等号（=）用来给变量赋值。等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。</p><h5 id="1-字符串（str）"><a href="#1-字符串（str）" class="headerlink" title="1.字符串（str）"></a>1.字符串（str）</h5><p>基于字符串的示例：                                </p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"zhangsan"</span>                                                                                                       </span><br><span class="line">name1 = <span class="string">"张三"</span></span><br><span class="line">name2 = <span class="string">"123456"</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name2))</span><br></pre></td></tr></tbody></table></figure><p>执行程序会输出以下结果：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;class <span class="string">'str'</span>&gt;                                                                                                                                                                    </span><br><span class="line">&lt;class <span class="string">'str'</span>&gt;</span><br><span class="line">&lt;class <span class="string">'str'</span>&gt;</span><br></pre></td></tr></tbody></table></figure><p>结果显示“xxx”内部的默认为字符串,换而言之如果不带“”会是什么类型那？</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = 12345                                                                                                                                                                    </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br></pre></td></tr></tbody></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;class <span class="string">'int'</span>&gt;                                                                                                                                                                    </span><br></pre></td></tr></tbody></table></figure><p>实验结果可以表明我们可以用“”将非字符串类型的数据转换为字符串，当然也可而已运用python内置命令str将数据转换为字符串例如:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = 123456                                                                                                                                                                    </span><br><span class="line">name =str(name)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;class <span class="string">'str'</span>&gt;                                                                                                                                                                    </span><br></pre></td></tr></tbody></table></figure><p>除此之外字符串的索引功能也很重要,字符串的索引默认从0开始例如：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"zhangsan"</span>                                                                                                                                                                    </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br><span class="line">name =name[2]</span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;class <span class="string">'str'</span>&gt;                                                                                                                                                                    </span><br><span class="line">a</span><br></pre></td></tr></tbody></table></figure><hr><h5 id="2-整数型（int）"><a href="#2-整数型（int）" class="headerlink" title="2.整数型（int）"></a>2.整数型（int）</h5><p>整数类型常用于小数点取整，或者将input输入的数据转化为整数方便计算例如：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#类型转换</span></span><br><span class="line">a = input(<span class="string">"我的年龄是："</span>)                                                                                                                                                                    </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line">a =int(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line"><span class="comment">#取整</span></span><br><span class="line">b =3.1415                                                                                                                                                                    </span><br><span class="line">b = int(b)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我的年龄是：20                                                                                                                                                                    </span><br><span class="line">&lt;class 'str'&gt;</span><br><span class="line">&lt;class 'int'&gt;</span><br><span class="line">3</span><br></pre></td></tr></tbody></table></figure><hr><h5 id="3-浮点型（float）"><a href="#3-浮点型（float）" class="headerlink" title="3.浮点型（float）"></a>3.浮点型（float）</h5><p>浮点的用法与int如出一辙，这里就不多举例子了，重要的是数据类型与相应的数据要保持一致例如：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = input(<span class="string">"圆周率是："</span>)                                                                                                                                                                    </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line">b =int(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line">b=<span class="built_in">float</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></tbody></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ValueError: invalid literal <span class="keyword">for</span> int() with base 10: <span class="string">'3.1415926'</span></span><br></pre></td></tr></tbody></table></figure><p>这就是类型判断错误引起的报错，正确的写法应该是：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = input(<span class="string">"圆周率是："</span>)                                                                                                                                                                    </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line">b=<span class="built_in">float</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></tbody></table></figure><p>输出结果为：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;class <span class="string">'str'</span>&gt;                                                                                                                                                                    </span><br><span class="line">3.1415926</span><br></pre></td></tr></tbody></table></figure><hr><h5 id="4-字典（dir）"><a href="#4-字典（dir）" class="headerlink" title="4.字典（dir）"></a>4.字典（dir）</h5><p>字典是python中常常见到的数据类型，表现形式为{“a”:”b”,”c”:”d”}，字典内可以包含一个键值对或者多个其中a和c是字典的键，b和d是键对应的值，我们可以通过键直接获得键对应的值例如：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dirctory = {<span class="string">"张三"</span>:<span class="string">"23岁"</span>,<span class="string">"李四"</span>:<span class="string">"28岁"</span>,<span class="string">"小明"</span>:<span class="string">"5岁"</span>}                                                                                                                                                                                                      </span><br><span class="line">age =dirctory.get(<span class="string">"张三"</span>)</span><br><span class="line">age2 =dirctory.get(<span class="string">"小明"</span>)</span><br><span class="line"><span class="built_in">print</span>(age,age2)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">E:\python项目练习\venv\Scripts\python.exe E:/python项目练习/text.py                                                                                                                                                   </span><br><span class="line">23岁 5岁</span><br><span class="line"></span><br><span class="line">进程已结束，退出代码为 0</span><br></pre></td></tr></tbody></table></figure><p>因此通过字典来获取数据只需要找到字典的键即可</p><hr><h5 id="5-列表（set）"><a href="#5-列表（set）" class="headerlink" title="5.列表（set）"></a>5.列表（set）</h5><p>列表同样也是非常常用的数据类型，列表通过索引来获取对应的数据，它的书写格式就是[“a”,”b”,”c”,”d”]，a,b,c,d可以是任意值，列表内也可以包含字典如[“a”,”b”,”c”,”d”,{“x”:”y”}]很多情况下我们把数据存放在列表内，通过循环索引达到列表数据的获取非常实用，例如：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">list =[<span class="string">"a"</span>,<span class="string">"1"</span>,<span class="string">"b"</span>,<span class="string">"f"</span>,<span class="string">"d"</span>,<span class="string">"name"</span>,<span class="string">"age"</span>]                                                                                                                                                                                                                                                                                                                                                                              </span><br><span class="line">n=len(list)</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range (0,n):</span><br><span class="line">    date =list[i]</span><br><span class="line">    <span class="built_in">print</span>(date)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">E:\python项目练习\venv\Scripts\python.exe E:/python项目练习/text.py                                                                                                                                                                                                                                                                                                                                                                                                 </span><br><span class="line">7</span><br><span class="line">a</span><br><span class="line">1</span><br><span class="line">b</span><br><span class="line">f</span><br><span class="line">d</span><br><span class="line">name</span><br><span class="line">age</span><br><span class="line">进程已结束，退出代码为 0</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><hr><h5 id="6-元组（tuple）"><a href="#6-元组（tuple）" class="headerlink" title="6. 元组（tuple）"></a>6. 元组（tuple）</h5><p>Python 的元组与列表类似，不同之处在于元组的元素不能修改，且内部不包含重复值，元组使用小括号 ( )，列表使用方括号 [ ]，元组中只包含一个元素时，需要在元素后面添加逗号 , ，否则括号会被当作运算符使用：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tup1 = (<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, 1997, 2000)                                                                                                                           </span><br><span class="line">tup2 = (1, 2, 3, 4, 5 )</span><br><span class="line">tup3 = <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>   <span class="comment">#  不需要括号也可以</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tup1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tup2))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tup3))</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;class <span class="string">'tuple'</span>&gt;                                                                                                                                      </span><br><span class="line">&lt;class <span class="string">'tuple'</span>&gt;</span><br><span class="line">&lt;class <span class="string">'tuple'</span>&gt;</span><br></pre></td></tr></tbody></table></figure><p>元组还可以通过下标索引访问元组的值例如：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tup1 = (<span class="string">'Google'</span>, <span class="string">'Runoob'</span>, 1997, 2000)                                                                                                                            </span><br><span class="line">tup2 = (1, 2, 3, 4, 5, 6, 7)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"tup1[0]: "</span>, tup1[0]) <span class="comment">#带""则把变量转化为字符串</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"tup2[1:5]: "</span>, tup2[1:5])</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">E:\python项目练习\venv\Scripts\python.exe E:/python项目练习/text.py                                                                                                                            </span><br><span class="line">tup1[0]:  Google</span><br><span class="line">tup2[1:5]:  (2, 3, 4, 5)</span><br><span class="line"></span><br><span class="line">进程已结束，退出代码为 0</span><br></pre></td></tr></tbody></table></figure><p>元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tup1 = (12, 34.56)                                                                                                                                           </span><br><span class="line">tup2 = (<span class="string">'abc'</span>, <span class="string">'xyz'</span>)</span><br><span class="line"><span class="comment"># 以下修改元组元素操作是非法的。</span></span><br><span class="line"><span class="comment"># tup1[0] = 100</span></span><br><span class="line"><span class="comment"># 创建一个新的元组</span></span><br><span class="line">tup3 = tup1 + tup2</span><br><span class="line"><span class="built_in">print</span> (tup3)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">E:\python项目练习\venv\Scripts\python.exe E:/python项目练习/text.py                                                                                                                         </span><br><span class="line">(12, 34.56, <span class="string">'abc'</span>, <span class="string">'xyz'</span>)</span><br><span class="line"></span><br><span class="line">进程已结束，退出代码为 0</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> str </tag>
            
            <tag> int </tag>
            
            <tag> float </tag>
            
            <tag> dir </tag>
            
            <tag> set </tag>
            
            <tag> tuple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/07/hexo%E7%B1%BB%E5%9E%8B%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA/"/>
      <url>/2021/07/07/hexo%E7%B1%BB%E5%9E%8B%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<hr><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> theam </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
